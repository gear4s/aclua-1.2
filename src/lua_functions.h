#include "lua.h"

static LUA_FUNCTION (include);
static LUA_FUNCTION (strtoiprange); // (string line)
static LUA_FUNCTION (players); // (bool alive_only)
static LUA_FUNCTION (spectators); // ()
static LUA_FUNCTION (rvsf); // (bool alive_only)
static LUA_FUNCTION (cla); // (bool alive_only)

//BEGIN client
// do
static LUA_FUNCTION (giveitem); // (int target_cn, int item_type)
static LUA_FUNCTION (clientprint); // (int target_cn, string message, int exclude_cn)
static LUA_FUNCTION (kill); // (int target_cn, bool gib)
static LUA_FUNCTION (forcedeath); // (int target_cn)
static LUA_FUNCTION (spawn); // (int target_cn, int health, int armour, int ammo, int mag, int weapon, int gamemode, int primaryweapon)
static LUA_FUNCTION (dodamage); // (int target_cn, int actor_cn, int damage, int weapon)
static LUA_FUNCTION (disconnect); // (int target_cn, int reason)
static LUA_FUNCTION (ban); // (int target_cn, int milliseconds = default ban time)
static LUA_FUNCTION (sendspawn); // (int target_cn)
static LUA_FUNCTION (flashonradar); // (int target_cn)
// if
static LUA_FUNCTION (isconnected); // (int player_cn)
static LUA_FUNCTION (isadmin); // (int player_cn)
static LUA_FUNCTION (getpriv); // (int player_cn)
static LUA_FUNCTION (isonfloor); // (int player_cn)
static LUA_FUNCTION (isonladder); // (int player_cn)
static LUA_FUNCTION (isscoping); // (int player_cn)
static LUA_FUNCTION (iscrouching); // (int player_cn)
static LUA_FUNCTION (isediting); // (int player_cn)
static LUA_FUNCTION (isalive); // (int player_cn)
static LUA_FUNCTION (isinwater); // (int player_cn)
static LUA_FUNCTION (isunderwater); // (int player_cn)
// get
static LUA_FUNCTION (getprimary); // (int player_cn)
static LUA_FUNCTION (getstate); // (int player_cn)
static LUA_FUNCTION (getname); // (int player_cn)
static LUA_FUNCTION (getip); // (int player_cn)
static LUA_FUNCTION (getweapon); // (int player_cn)
static LUA_FUNCTION (getpos); // (int player_cn)
static LUA_FUNCTION (gethealth); // (int player_cn)
static LUA_FUNCTION (getarmor); // (int player_cn)
static LUA_FUNCTION (getfrags); // (int player_cn)
static LUA_FUNCTION (getdeaths); // (int player_cn)
static LUA_FUNCTION (getping); // (int player_cn)
static LUA_FUNCTION (getteam); // (int player_cn)
static LUA_FUNCTION (getflags); // (int player_cn)
static LUA_FUNCTION (getammo); // (int player_cn, int weapon)
static LUA_FUNCTION (getnextprimary); // (int player_cn)
static LUA_FUNCTION (getvelocity); // (int player_cn)
static LUA_FUNCTION (getangle); // (int player_cn)
static LUA_FUNCTION (getskin); // (int player_cn)
static LUA_FUNCTION (getscore); // (int player_cn)
static LUA_FUNCTION (getspawnmillis); // (int player_cn)
static LUA_FUNCTION (getsessionid); // (int player_cn)
static LUA_FUNCTION (clienthasflag); // (int player_cn)
static LUA_FUNCTION (getvote); // (int player_cn)
static LUA_FUNCTION (getacversion); // (int player_cn)
static LUA_FUNCTION (getacbuildtype); // (int player_cn)
static LUA_FUNCTION (getconnectmillis); // (int player_cn)
static LUA_FUNCTION (getteamkills); // (int player_cn)
// set
static LUA_FUNCTION (setprimary); // (int target_cn, int weapon)
static LUA_FUNCTION (setpos); // (int target_cn, float x, float y, float z)
static LUA_FUNCTION (setammo); // (int target_cn, int weapon, int ammo, int mag)
static LUA_FUNCTION (setname); // (int target_cn, string nickname)
static LUA_FUNCTION (sethealth); // (int target_cn, int health)
static LUA_FUNCTION (setarmor); // (int target_cn, int armor)
static LUA_FUNCTION (setweapon); // (int target_cn, int weapon)
static LUA_FUNCTION (setrole); // (int target_cn, int role, bool disallow_multiple_admins)
static LUA_FUNCTION (setteam); // (int target_cn, int team, int forceteam_reason)
static LUA_FUNCTION (setfrags); // (int target_cn, int frags)
static LUA_FUNCTION (setflags); // (int target_cn, int flags)
static LUA_FUNCTION (setdeaths); // (int target_cn, int deaths)
static LUA_FUNCTION (setskin); // (int target_cn, int skin)
static LUA_FUNCTION (setvelocity); // (int target_cn, float x, float y, float z, int power)
static LUA_FUNCTION (setscore); // (int target_cn, int score)
static LUA_FUNCTION (setsockettype); // (int target_cn, int socket_type)
static LUA_FUNCTION (sethostname); // (int target_cn, string hostname)
static LUA_FUNCTION (setping); // (int target_cn, int ping)
static LUA_FUNCTION (setangle); // (int target_cn, int hor_angle, int ver_angle)
static LUA_FUNCTION (setscoping); // (int target_cn, bool scoping)
static LUA_FUNCTION (setcrouching); // (int target_cn, bool crouching)
static LUA_FUNCTION (setip); // (int target_cn, string ip)
static LUA_FUNCTION (setstate); // (int target_cn, int state)
static LUA_FUNCTION (setteamkills); // (int target_cn, int teamkills)
//END client


//BEGIN vote
static LUA_FUNCTION (voteend); // (int result)
//END vote


//BEGIN server config
static LUA_FUNCTION (getprotocol); // ()
static LUA_FUNCTION (getdefaultprotocol); // ()
static LUA_FUNCTION (setprotocol); // (int protocol_version)
static LUA_FUNCTION (setservname); // (string server_name)
static LUA_FUNCTION (setmaxcl); // (int max_clients)
static LUA_FUNCTION (setpwd); // (string server_password)
static LUA_FUNCTION (setadminpwd); // (string admin_password, int line_of_file = 0, bool connect_only = false)
static LUA_FUNCTION (setmotd); // (string motd)
static LUA_FUNCTION (setblacklist); // (string filename)
static LUA_FUNCTION (setnickblist); // (string filename)
static LUA_FUNCTION (setmaprot); // (string filename)
static LUA_FUNCTION (setkickthres); // (int threshold)
static LUA_FUNCTION (setbanthres); // (int threshold)
static LUA_FUNCTION (getadminpwd); // (int line_of_file)
static LUA_FUNCTION (removeadminpwd); // (int line_of_file), (string admin_password)
static LUA_FUNCTION (setmasterserver); // (string host)
static LUA_FUNCTION (getadminpwds); // ()
static LUA_FUNCTION (getwholemaprot); // ()
static LUA_FUNCTION (setwholemaprot); // (table maprot)
static LUA_FUNCTION (getwholebl); // ()
static LUA_FUNCTION (setwholebl); // (table blacklist)
static LUA_FUNCTION (getmasterserver); // ()
static LUA_FUNCTION (getmasterservers); // ()
static LUA_FUNCTION (addms); // (string host)
static LUA_FUNCTION (updatems); // ()
static LUA_FUNCTION (removems); // (string host)
static LUA_FUNCTION (rereadcfgs); // ()
//END server config


//BEGIN server
static LUA_FUNCTION (shuffleteams); // ()
static LUA_FUNCTION (getdefaultammo); // (int weapon)
static LUA_FUNCTION (getservermaps); // (bool including_official)
static LUA_FUNCTION (getflagkeeper); // (int flag)
static LUA_FUNCTION (getmapname); // ()
static LUA_FUNCTION (gettimeleft); // ()
static LUA_FUNCTION (getgamemode); // ()
static LUA_FUNCTION (getsvtick); // ()
static LUA_FUNCTION (maxclient); // ()
static LUA_FUNCTION (changemap); // (string mapname, int gamemode, int maptime)
static LUA_FUNCTION (flagaction); // (int actor_cn, int action, int flag)
static LUA_FUNCTION (setnextmode); // (int mode)
static LUA_FUNCTION (setnextmap); // (string map)
static LUA_FUNCTION (setmastermode); // (int mastermode)
static LUA_FUNCTION (forcearenawin); // (int alive)
static LUA_FUNCTION (forcemapend); // ()
static LUA_FUNCTION (getmastermode); // ()
static LUA_FUNCTION (settimeleft); // (int timeleft)
static LUA_FUNCTION (getautoteam); // ()
static LUA_FUNCTION (setautoteam); // (bool autoteam)
static LUA_FUNCTION (luanotice); // (object message, string target)
static LUA_FUNCTION (getnextmode); // ()
static LUA_FUNCTION (getnextmap); // ()
static LUA_FUNCTION (getmapitems); // ()
static LUA_FUNCTION (spawnitem); // (int item_id)
static LUA_FUNCTION (removebans); // ()
static LUA_FUNCTION (getmaprotnextmap); // ()
static LUA_FUNCTION (getmaprotnextmode); // ()
static LUA_FUNCTION (addclient); // ()
static LUA_FUNCTION (initclient); // (int player_cn)
static LUA_FUNCTION (delclient); // (int player_cn)
static LUA_FUNCTION (sayas); // (string message, int player_cn, bool team, bool me)
static LUA_FUNCTION (voiceas); // (int sound, int player_cn, bool team)
static LUA_FUNCTION (getgamemillis); // ()
static LUA_FUNCTION (getgamelimit); // ()
static LUA_FUNCTION (gettimeleftmillis); // ()
static LUA_FUNCTION (settimeleftmillis); // ()
static LUA_FUNCTION (removeban); // (string ip)
static LUA_FUNCTION (getbans); // ()
static LUA_FUNCTION (getmaprotnextentry); // ()
static LUA_FUNCTION (getmaprotnexttimeleft); // ()
static LUA_FUNCTION (logline); // (int level, string line)
static LUA_FUNCTION (setmaprotnextentry); // (table entry)
static LUA_FUNCTION (setmaprotnextmap); // (string mapname)
static LUA_FUNCTION (setmaprotnextmode); // (int mode)
static LUA_FUNCTION (setmaprotnexttimeleft); // (int timeleft)
static LUA_FUNCTION (getreloadtime); // (int gun)
static LUA_FUNCTION (getattackdelay); // (int gun)
static LUA_FUNCTION (getmagsize); // (int gun)
static LUA_FUNCTION (shootas); // (int player_cn, table to [ = {x,y,z} ])
static LUA_FUNCTION (reloadas); // (int player_cn)
static LUA_FUNCTION (pickupas); // (int player_cn, int item_id)
static LUA_FUNCTION (removemap); // (string mapname)
static LUA_FUNCTION (mapisok); // (string mapname = current map)
static LUA_FUNCTION (mapexists); // (string mapname)
static LUA_FUNCTION (voteas); // (int player_cn, int vote)
static LUA_FUNCTION (getitempos); // (int item_id)
static LUA_FUNCTION (isitemspawned); // (int item_id)
static LUA_FUNCTION (getmappath); // (string mapname)
static LUA_FUNCTION (getpushfactor); // (int gun)
static LUA_FUNCTION (genpwdhash); // (string player_name, string password, int session_id)
static LUA_FUNCTION (gettotalsent); // ()
static LUA_FUNCTION (gettotalreceived); // ()
static LUA_FUNCTION (cleargbans); // ()
static LUA_FUNCTION (addgban); // (string ip)
static LUA_FUNCTION (checkgban); // (string ip)
static LUA_FUNCTION (callhandler); // (string handler, ...)
static LUA_FUNCTION (getwaterlevel); // (string mapname = current map)
static LUA_FUNCTION (callgenerator); // (string handler, ...)
//END server
